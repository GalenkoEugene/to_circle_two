defaults: &defaults
  working_directory: ~/campsited
references:
  restore_bundle_cache: &restore_bundle_cache
    restore_cache:
      keys:
        - campsited-{{ checksum "Gemfile.lock" }}

  bundle_install: &bundle_install
    run:
      name: Installing gems
      command: bundle install --jobs=4 --retry=3 --path vendor/bundle

  save_bundle_cache: &save_bundle_cache
    save_cache:
      key: campsited-{{ checksum "Gemfile.lock" }}
      paths:
        - vendor/bundle

  restore_environment_cache: &restore_environment_cache
    restore_cache:
      keys:
        - campsited-{{ .Environment.CIRCLE_SHA1 }}

version: 2
jobs:
  checkout_code:
    <<: *defaults
    docker:
      - image: circleci/ruby:2.3.7-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci
          RAILS_ENV: test
          RACK_ENV: test

      - image: circleci/postgres:9.6.9-alpine-postgis
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: campsited
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - save_cache:
          key: campsited-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/campsited

  rake_test:
    <<: *defaults
    docker:
      - image: circleci/ruby:2.3.7-node-browsers
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci
          RAILS_ENV: test
          RACK_ENV: test

      - image: circleci/postgres:9.6.9-alpine-postgis
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: campsited
          POSTGRES_PASSWORD: ""

    steps:
      - checkout # special step to check out source code to working directory
      - run:
          name: Install Postgres client
          command: sudo apt install -y postgresql-client-9.6

      - <<: *restore_bundle_cache
      - <<: *bundle_install
      - <<: *save_bundle_cache

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run: cp config/database.yml.sample config/database.yml

      - run: bundle exec rake db:create db:structure:load --trace

      - run:
          name: Create tmp directory
          command: mkdir tmp

      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES

      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  deploy_to_staging:
    machine:
        enabled: true
    <<: *defaults
    environment:
      - HEROKU_APP: campsited-staging
    steps:
      - <<: *restore_bundle_cache
      - <<: *restore_environment_cache
      - checkout
      - run:
          name: Deploy Master to Heroku
          command: |
            "[[ ! -s \"$(git rev-parse --git-dir)/shallow\" ]] || git fetch --unshallow"
            git push git@heroku.com:campsited-staging.git $CIRCLE_SHA1:refs/heads/feature/923
            heroku maintenance:on --app campsited-staging
            heroku run rake db:migrate --app campsited-staging:
              timeout: 400
            heroku maintenance:off --app campsited-staging
            heroku run rake cache:drop_cache --app campsited-staging
            heroku restart --app campsited-staging

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - checkout_code
      - rake_test:
          requires:
            - checkout_code
      - deploy_to_staging:
          requires:
            - rake_test
